function validName(e){return!!e}function validEmail(e){return/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)}function validPhoneNumber(e){return/^\(?(\d{3})\)?[- ]?(\d{3})[- ]?(\d{4})$/.test(e)}const formInputs=[{label:"Name",id:"name",className:"input-name",type:"text",isRequired:!0,errorText:"The name field is required, please fill it out.",value:"",validFunction:validName},{label:"Phone",id:"phone",className:"input-phone",type:"tel",isRequired:!0,errorText:'Incorrect phone format, please enter a valid phone (for example: "096 123 2233").',value:"",validFunction:validPhoneNumber},{label:"E-mail",id:"email",className:"input-email",type:"email",isRequired:!0,errorText:'Incorrect e-mail address format, please enter a valid e-mail address (for example: "email@test.com").',value:"",validFunction:validEmail}],formErrors=[];function checkIsValidInput(e,t){const r=e.querySelector("input"),s=e.querySelector(".error"),a=r.classList.contains("has-content"),n=s.classList.contains("visible");return t.value?!a&&r.classList.add("has-content"):a&&r.classList.remove("has-content"),t.validFunction(t.value)?(n&&s.classList.remove("visible"),!0):(!n&&formErrors.length&&s.classList.add("visible"),!1)}const renderInputBlock=e=>`\n\t<div class="input-default ${e.isRequired?"required":""}">\n\t\t<input id="${e.id}" type="${e.type}" />\n\t\t<label for="${e.id}" class="label">${e.label}</label>\n\t\t<div class="line"></div>\n\t</div>\n\n\t<p class="error text-main">${e.errorText}</p>\n`;export default function form(){const e=document.querySelector("#form"),t=e.querySelector(".inputs");formInputs.forEach((e=>{const r=document.createElement("div");r.className=e.className,r.innerHTML+=renderInputBlock(e),r.querySelector("input").addEventListener("input",(t=>{e.value=t.target.value,checkIsValidInput(r,e)})),t.append(r)}));const r=document.querySelector("#check-input"),s=r.querySelector(".error");let a=!1;r.querySelector("input").addEventListener("change",(e=>{const t=s.classList.contains("visible");if(a=e.target.checked,!a)return!t&&formErrors.length&&s.classList.add("visible");t&&s.classList.remove("visible")})),e.addEventListener("submit",(t=>{t.preventDefault(),formErrors.splice(0,formErrors.length),formInputs.forEach((t=>{const r=e.querySelector(`.${t.className}`);checkIsValidInput(r,t)||(formErrors.push(t.id),checkIsValidInput(r,t))})),a||(s.classList.add("visible"),formErrors.push("privacy-policy")),!formErrors.length&&fetch("/form-sending",{method:"POST"}).then((e=>{alert(`Error status: ${e.status}`)}))}))}